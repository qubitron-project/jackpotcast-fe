"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/server.ts
var server_exports = {};
__export(server_exports, {
  getCookies: () => getCookies
});
module.exports = __toCommonJS(server_exports);
var import_headers = require("next/headers");
var getCookies = () => {
  const org = (0, import_headers.cookies)();
  return {
    get: (name) => name == null ? Object.fromEntries(org.getAll().map((c) => [c.name, c.value])) : org.get(name)?.value,
    set: (name, value, options) => {
      const pre = org.get(name)?.value;
      org.set(name, value, options && convertCookieAttributes(options));
      return pre;
    },
    remove: (name) => org.delete(name)
  };
};
var convertCookieAttributes = (options) => ({
  expires: typeof options.expires === "number" ? options.expires * 864e5 : options.expires,
  path: options.path,
  domain: options.domain,
  secure: options.secure,
  sameSite: options.sameSite?.toLowerCase()
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getCookies
});
//# sourceMappingURL=server.js.map
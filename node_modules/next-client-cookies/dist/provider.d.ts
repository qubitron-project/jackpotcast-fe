import { FC, ReactNode } from 'react';
import { Cookies } from './types';
export declare const useCookies: () => Cookies;
interface CookieRecord {
    name: string;
    value: string;
}
type CookieCommand = {
    [key in keyof Cookies]: [key, ...Parameters<Cookies[key]>];
}['set' | 'remove'];
type SerializedValue<T> = {
    [K in keyof T]: Date extends T[K] ? string : object extends T[K] ? SerializedValue<T[K]> : T[K];
};
declare global {
    interface Window {
        __cookies_commands: SerializedValue<CookieCommand>[];
    }
}
export declare const CookiesProvider: FC<{
    value: CookieRecord[];
    children: ReactNode;
}>;
export {};
//# sourceMappingURL=provider.d.ts.map
"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  CookiesProvider: () => CookiesProvider,
  useCookies: () => useCookies
});
module.exports = __toCommonJS(src_exports);

// src/provider.tsx
var import_react = __toESM(require("react"));
var import_js_cookie = __toESM(require("js-cookie"));
var import_navigation = require("next/navigation");
var Ctx = (0, import_react.createContext)(null);
var useCookies = () => {
  const cookies = (0, import_react.useContext)(Ctx);
  if (typeof window !== "undefined") {
    return import_js_cookie.default;
  }
  if (!cookies) {
    throw new Error("Missing <CookiesProvider>");
  }
  return cookies;
};
var CookiesProvider = ({ value, children }) => {
  const insertedHTML = (0, import_react.useContext)(
    import_navigation.ServerInsertedHTMLContext
  );
  const cookies = (0, import_react.useMemo)(() => {
    const map = Object.fromEntries(
      value.map((c) => [c.name, c.value])
    );
    return {
      get: (name) => name == null ? { ...map } : map[name],
      set: (...args) => {
        insertedHTML?.(() => getCookieCommandHtml("set", ...args));
        return map[args[0]];
      },
      remove: (...args) => {
        insertedHTML?.(() => getCookieCommandHtml("remove", ...args));
      }
    };
  }, [value, insertedHTML]);
  (0, import_react.useEffect)(() => {
    const commands = window.__cookies_commands || [];
    if (!commands.length)
      return;
    for (const command of commands) {
      runCookieCommand(command);
    }
  }, []);
  return /* @__PURE__ */ import_react.default.createElement(Ctx.Provider, { value: cookies }, children);
};
var getCookieCommandHtml = (...command) => /* @__PURE__ */ import_react.default.createElement(
  "script",
  {
    dangerouslySetInnerHTML: {
      __html: `window.__cookies_commands = window.__cookies_commands || [];window.__cookies_commands.push(${JSON.stringify(
        command
      ).replaceAll("</", "<\\/")});`
    }
  }
);
var runCookieCommand = (command) => {
  if (typeof window === "undefined")
    return;
  switch (command[0]) {
    case "set": {
      import_js_cookie.default.set(
        command[1],
        command[2],
        command[3] && deserializeCookieAttributes(command[3])
      );
      break;
    }
    case "remove": {
      import_js_cookie.default.remove(
        command[1],
        command[2] && deserializeCookieAttributes(command[2])
      );
      break;
    }
  }
};
var deserializeCookieAttributes = (attributes) => ({
  ...attributes,
  expires: typeof attributes.expires === "string" ? new Date(attributes.expires) : attributes.expires
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CookiesProvider,
  useCookies
});
//# sourceMappingURL=index.js.map